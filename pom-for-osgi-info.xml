<!--
	This file is part of Burningwave Reflection.                                                                      
	                                                                                                            
	Author: Roberto Gentili                                                                                     
	                                                                                                            
	Hosted at: https://github.com/burningwave/reflection                                                              
	                                                                                                            
	- -                                                                                                          
	                                                                                                            
	The MIT License (MIT)                                                                                       
	                                                                                                            
	Copyright (c) 2022 Roberto Gentili                                                                          
	                                                                                                            
	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
	documentation files (the "Software"), to deal in the Software without restriction, including without        
	limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of   
	the Software, and to permit persons to whom the Software is furnished to do so, subject to the following    
	conditions:                                                                                                 
	                                                                                                            
	The above copyright notice and this permission notice shall be included in all copies or substantial        
	portions of the Software.                                                                                   
	                                                                                                            
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT       
	LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO   
	EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
	AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
	OR OTHER DEALINGS IN THE SOFTWARE.
--> 
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.burningwave</groupId>
	<artifactId>reflection</artifactId>
	<version>3.6.0-fjs-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Burningwave Reflection</name>
	<description>
		An advanced and highly optimized reflection engine
	</description>
	<url>https://burningwave.github.io/reflection/</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://github.com/burningwave/reflection/blob/master/LICENSE</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Burningwave</name>
		<url>https://www.burningwave.org/</url>
	</organization>

	<developers>
		<developer>
			<name>Roberto Gentili</name>
			<id>roberto.gentili</id>
			<email>info@burningwave.org</email>
			<organization>Burningwave</organization>
			<organizationUrl>https://www.burningwave.org/</organizationUrl>
			<roles>
				<role>Administrator</role>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<name>Alessio Perrotta</name>
			<email>info@burningwave.org</email>
			<organization>Burningwave</organization>
			<organizationUrl>https://www.burningwave.org/</organizationUrl>
			<roles>
				<role>External relationship manager</role>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<copyright.holder>Roberto Gentili</copyright.holder>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<target_version>7</target_version>
		<skipTests>true</skipTests>
		<project.test.testSuite>AllTestsSuite</project.test.testSuite>
		<project.test.includes>**/${project.test.testSuite}.java</project.test.includes>
		<project.test.excludes>**/*Test.java</project.test.excludes>
		<project.generated.artifacts.prefix>bw</project.generated.artifacts.prefix>

		<junit-jupiter.version>5.9.1</junit-jupiter.version>
		<junit.version>1.9.1</junit.version>
		<burningwave-jvm-driver.version>8.11.0</burningwave-jvm-driver.version>
		<maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
	</properties>

	<dependencies>
		
		<dependency>
			<groupId>org.burningwave</groupId>
			<artifactId>jvm-driver</artifactId>
			<version>${burningwave-jvm-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>**LICENSE</include>
				</includes>
				<targetPath>META-INF</targetPath>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
        	<plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.5.0</version>
                <extensions>true</extensions> <!-- make sure this is present -->
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <manifestLocation>${project.build.outputDirectory}/META-INF/</manifestLocation> <!-- make sure this is present! in the example of maven bundle plugin documentation, this piece is NOT present -->
                    <exportScr>true</exportScr> <!-- be sure to add this line as well -->
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                        <_dsannotations>*</_dsannotations>
                    </instructions>
                </configuration>
            </plugin> 
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<systemProperties>
						<property>
							<name>java.util.logging.config.file</name>
							<value>src/test/resources/logging.properties</value>
						</property>
					</systemProperties>
					<skipTests>${skipTests}</skipTests>
					<excludes>
						<exclude>${project.test.excludes}</exclude>
					</excludes>
					<includes>
						<include>${project.test.includes}</include>
					</includes>
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>compile-with-jdk-8</id>
			<activation>
				<jdk>1.8</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<executions>
							<execution>
								<id>default-compile</id>
								<configuration>
									<source>${target_version}</source>
									<target>${target_version}</target>
									<excludes>
										<exclude>module-info.java</exclude>
									</excludes>
								</configuration>
							</execution>
							<execution>
								<id>default-testCompile</id>
								<configuration>
									<source>${target_version}</source>
									<target>${target_version}</target>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>compile-with-jdk-9-or-later</id>
			<activation>
				<jdk>[9,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>${maven-compiler-plugin.version}</version>
						<executions>
							<execution>
								<id>default-compile</id>
								<configuration>
									<release>9</release>
									<verbose>true</verbose>
								</configuration>
							</execution>
							<execution>
								<id>default-testCompile</id>
								<configuration>
									<release>${target_version}</release>
									<verbose>true</verbose>
								</configuration>
							</execution>
							<execution>
								<id>base-compile</id>
								<goals>
									<goal>compile</goal>
								</goals>
								<!-- recompile everything for target VM except the module-info.java -->
								<configuration>
									<excludes>
										<exclude>module-info.java</exclude>
									</excludes>
									<source>${target_version}</source>
									<target>${target_version}</target>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>add-module-info-to-jar</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<jar update="true" destfile="${project.build.directory}/${project.build.finalName}.jar">
											<zipfileset prefix="META-INF/versions/9" dir="${project.build.directory}/classes" includes="module-info.class" />
										</jar>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>